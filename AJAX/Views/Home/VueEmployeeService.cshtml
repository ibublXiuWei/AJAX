@section Styles{
		<style>

		</style>
}

<div id="app">
	@*篩選*@
	<div class="row" style="width:40%;margin-left:auto;margin-right:5px;">
		<label class="col-lg-3">請輸入關鍵字</label>
		<input class="col-lg-7" v-model="Filter" placeholder="輸入篩選關鍵字" />
		<button class="btn btn-outline-primary" @@click="filterEmployeeDTO">篩選</button>
	</div>
	<button type="button" class="btn btn-success" @@click="showModal">新增員工記錄</button>
	<div class="row">
		<div class="col-12 mt-4">
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<td>員工編號</td>
						<td>姓</td>
						<td>名</td>
						<td>職務</td>
					</tr>
				</thead>
				<tbody>
					<tr v-for="item in EmployeeDTOes">
						<template v-if="item.Edit==true">
							<td>{{item.employeeId}}</td>
							<td><input v-model="item.lastName"/></td>
							<td><input v-model="item.firstName" /></td>
							<td><input v-model="item.title" /></td>
							<td>
								<button type="button" class="btn btn-primary" @@click="update(item)">修改</button>
								<button type="button" class="btn btn-primary" @@click="cancel">取消</button>
							</td>
						</template>
						<template v-else="">
							<td>{{item.employeeId}}</td>
							<td>{{item.lastName}}</td>
							<td>{{item.firstName}}</td>
							<td>{{item.title}}</td>
							<td>
								<button type="button" class="btn btn-info" @@click="edit(item.employeeId)">編輯</button>
								<button type="button" class="btn btn-danger" @@click="deleteEmployee(item.employeeId)">刪除</button>
							</td>
						</template>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	
	@*新增*@
    <div class="modal fade" id="insertModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">新增員工記錄</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="form-group">
                            <label class="form-label">FirstName:</label>
                            <input type="text" class="form-control" v-model="firstName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">LastName:</label>
                            <input type="text" class="form-control" v-model="lastName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Title:</label>
                            <input type="text" class="form-control" v-model="title" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" data-bs-dismiss="modal">關閉</button>
                    <button type="button" class="btn btn-primary" @@click="insert">新增員工</button>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts{

		<script src="https://unpkg.com/vue@next"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.3/axios.min.js"></script>

		<script>
			var webApiBaseAddr = "https://localhost:7175";
			var vueApp={
						data(){
							return{
								Filter:"",
								EmployeeDTOes:[],
								employeeId:null,
								firstName:"",
								lastName:"",
								title:"",
								firstNameOld:"",
								lastNameOld:"",
								titleOld:""
							};
						},
						//mounted 初始化
						mounted:function(event){
							let _this=this;
							_this.getEmployeeDTOes();
						},
						methods:{
							getEmployeeDTOes:function(){
								//alert("getEmployeeDTOes");
								let _this=this;
								axios.get(`${webApiBaseAddr}/api/Employees`).then(response=>{
									_this.EmployeeDTOes=response.data;
									var employeeList=[];
									for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
										var item={};
										item = _this.EmployeeDTOes[i];
										item.Edit=false;
										employeeList.push(item);
									}
									_this.EmployeeDTOes = employeeList;
								});
							},
							showModal: function () {
								//alert("showModal");
								$("#insertModal").modal('show');
							},
							update:function(item){
								//alert("update");
								let _this=this;
								var request={};
								request.EmployeeId=item.employeeId;
								request.FirstName = item.firstName;
								request.LastName = item.lastName;
								request.Title = item.title;
								axios.put(`${webApiBaseAddr}/api/Employees/${item.employeeId}`,request).then(response=>{
									alert(response.data);
									_this.filterEmployeeDTO();
									_this.cancel();
								});
							},
							cancel:function(){
								//alert("cancel");
									let _this = this;
									var employeeList = [];
									for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
										var item = {};
										item = _this.EmployeeDTOes[i];
										if (item.Edit == true) {
											item.Edit = false;
											item.firstName=_this.firstNameOld;
											item.lastName=_this.lastNameOld;
											item.title=_this.titleOld;
										} 

										employeeList.push(item);
									}
									_this.EmployeeDTOes = employeeList;
						
							},
							edit:function(employeeId){
								//alert("edit");
								let _this=this;
								var employeeList=[];
								for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
										var item={};
										item = _this.EmployeeDTOes[i];
										if(employeeId==item.employeeId){
											item.Edit = true;
											_this.firstNameOld = item.firstName;
											_this.lastNameOld = item.lastName;
											_this.titleOld = item.title;
										}else{
											item.Edit=false;
										}
								
										employeeList.push(item);
									}
									_this.EmployeeDTOes = employeeList;
						
							},
							deleteEmployee:function(employeeId){
								//alert("delete");
								let _this=this;
								var ret=confirm("確定要刪除嗎?");
								if (ret==true){
									axios.delete(`${webApiBaseAddr}/api/Employees/${employeeId}`)
									.then(response=>{
											alert(response.data);
											_this.filterEmployeeDTO();
										}
									);
								}
							},
							filterEmployeeDTO:function(){
								//let _this=this;
								//alert(_this.Filter);
								let _this=this;
								var request={};
								request.FirstName=_this.Filter;
								axios.post(`${webApiBaseAddr}/api/Employees/Filter`,request).then(response=>{
									_this.EmployeeDTOes=response.data;
									var employeeList=[];
									for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
										var item={};
										item = _this.EmployeeDTOes[i];
										item.Edit=false;
										employeeList.push(item);
									}
									_this.EmployeeDTOes = employeeList;
								}
								);
							},
							
							insert: function () {
								//alert("insert");
								let _this = this;
								var request = {};
								request.EmployeeId = 0;
								request.FirstName = _this.firstName;
								request.LastName = _this.lastName;
								request.Title = _this.title;
								axios.post(`${webApiBaseAddr}/api/Employees`, request).then(response => {
									alert(response.data);
									window.location = "/Home/VueEmployeeService";
								});
							},

						}
			
			};											
			var app=Vue.createApp(vueApp).mount("#app");
		</script>
}